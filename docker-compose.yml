version: "3.8"

services:

#GRAFANA  
  grafana:
    image: grafana/grafana:7.4.3
    environment: 
      GF_SECURITY_ADMIN_PASSWORD: ebxjcq86
      TZ: America/Sao_Paulo
    hostname: grafana_main_host
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    logging: 
      driver: "json-file"
      options:
        max-size: "250m"
        max-file: "3"
    networks: 
      - backend    

#REDIS
  redis:
    image: redis:6.2-alpine
    hostname: redis_main_host
    ports:
      - "6379:6379"
    logging: 
      driver: "json-file"
      options:
        max-size: "250m"
        max-file: "3"
    networks:
      - backend
      
#POSTGRES
  postgresql:
    image: postgres:13
    hostname: postgres_main_host
    environment:
      POSTGRES_DB: teste_db
      POSTGRES_USER: "waldmer"
      POSTGRES_PASSWORD: "ebxjcq86"
    volumes:
      - postgres_data:/var/lib/postgresql
    ports:
      - "5432:5432"
    logging:
      driver: "json-file"
      options:
        max-size: "250m"
        max-file: "3"
    networks:
      - backend

#JAEGER
  jaeger:
    image: jaegertracing/all-in-one:1.22
    hostname: jeager_main_host
    ports:
      - "6831:6831/udp"
      - "16686:16686"
    logging: 
      driver: "json-file"
      options:
        max-size: "250m"
        max-file: "3"
    networks:
      - backend

# #ZOOKEEPER
#   zookeeper:
#     image: zookeeper:3.6
#     hostname: zookeeper_main_host
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#       ZOOKEEPER_TICK_TIME: 2000
#     logging:
#       driver: "json-file"
#       options:
#         max-size: "250m"
#         max-file: "3"
#     networks: 
#       - backend
      
# #KAFKA
#   kafka:
#     image: confluentinc/cp-kafka:6.0.2
#     hostname: kafka_main_host
#     environment: 
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper_main_host:2181
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#       KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#     ports:
#       - "9092:9092"
#     logging:
#       driver: "json-file"
#       options:
#         max-size: "250m"
#         max-file: "3"
#     networks: 
#       - backend

#PROMETHEUS

  prometheus:
    image: prom/prometheus:v2.25.0
    hostname: prometheus_main_host
    volumes:
      - prometheus_data:/var/lib/prometheus
    ports:
      - "9090:9090"
    logging:
      driver: "json-file"
      options:
        max-size: "250m"
        max-file: "3"
    networks: 
      - backend

#PGADMIN
  pgadmin:
    image: dpage/pgadmin4:5
    hostname: pgadmin_main_host
    environment: 
      PGADMIN_DEFAULT_EMAIL: "waldmer"
      PGADMIN_DEFAULT_PASSWORD: "ebxjcq86"
      PGADMIN_LISTEN_PORT: 8085
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "8085:8085"
    logging:
      driver: "json-file"
      options:
        max-size: "250m"
        max-file: "3"
    networks: 
      - backend

#SPLUNK
  splunk:
    image: splunk/splunk:latest
    hostname: splunk_main_host
    environment: 
      SPLUNK_START_ARGS: --accept_license
      SPLUNK_PASSWORD: "ebxjcq86"
    volumes:
      - splunk_etc:/opt/splunk/etc
      - splunk_var:/opt/splunk/var
    ports:
      - "8000:8000"
      - "9997:9997"
      - "8088:8088"
      - "1514:1514"
    logging:
      driver: "json-file"
      options:
        max-size: "250m"
        max-file: "3"
    networks: 
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: "true"
      CONFLUENT_SUPPORT_CUSTOMER_ID: "anonymous"

  kafka-tools:
    image: confluentinc/cp-kafka:5.4.0
    hostname: kafka-tools
    container_name: kafka-tools
    command: ["tail", "-f", "/dev/null"]
    network_mode: "host"

  schema-registry:
    image: confluentinc/cp-schema-registry:5.4.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"

  control-center:
    image: confluentinc/cp-enterprise-control-center:5.4.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:29092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

#VOLUMES
volumes:
  grafana_data:
  postgres_data:
  prometheus_data:
  pgadmin_data:
  splunk_etc:
  splunk_var:

#NETWORK
networks: 
  backend: